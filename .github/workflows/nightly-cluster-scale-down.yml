name: Scale Down EKS Cluster

on:
  schedule:
    # 9 PM PST = 5 AM UTC next day
    - cron: '0 5 * * *'
  workflow_dispatch:  # Allow manual triggering

permissions:
  id-token: write
  contents: read

jobs:
  scale-down:
    name: Scale Cluster to 0
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (Main Account)
        id: main-aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          output-credentials: true

      - name: Configure AWS Credentials (Route53 Account)
        id: route53-aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_ROUTE53 }}
          aws-region: ${{ secrets.AWS_REGION }}
          output-credentials: true

      - uses: extractions/setup-just@v3
      - uses: hashicorp/setup-terraform@v3

      - name: Scale cluster to 0
        run: |
          # Configure main account profile
          aws configure set aws_access_key_id "${{ steps.main-aws.outputs.aws-access-key-id }}" --profile kubetalk
          aws configure set aws_secret_access_key "${{ steps.main-aws.outputs.aws-secret-access-key }}" --profile kubetalk
          aws configure set aws_session_token "${{ steps.main-aws.outputs.aws-session-token }}" --profile kubetalk
          
          # Configure Route53 account profile
          aws configure set aws_access_key_id "${{ steps.route53-aws.outputs.aws-access-key-id }}" --profile kubetalk-root
          aws configure set aws_secret_access_key "${{ steps.route53-aws.outputs.aws-secret-access-key }}" --profile kubetalk-root
          aws configure set aws_session_token "${{ steps.route53-aws.outputs.aws-session-token }}" --profile kubetalk-root
          
          mkdir -p infra/variables
          echo '${{ vars.TERRAFORM_CONFIG }}' > infra/variables/config.json
          just infra-globals kubetalk ${{ secrets.AWS_REGION }} kubetalk-root
          just infra-init
          just kube-scale-down

      - name: Notify on success
        if: success()
        run: |
          echo "Successfully scaled cluster to 0 nodes at $(date)"

      - name: Notify on failure
        if: failure()
        run: |
          echo "Failed to scale cluster to 0 nodes at $(date)" 